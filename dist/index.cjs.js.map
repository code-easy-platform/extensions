{"version":3,"file":"index.cjs.js","sources":["../node_modules/uuid/dist/esm-browser/rng.js","../node_modules/uuid/dist/esm-browser/stringify.js","../node_modules/uuid/dist/esm-browser/native.js","../node_modules/uuid/dist/esm-browser/v4.js","../node_modules/react-observing/dist/core/Observe.js","../src/lib/WorkerMessageReceiver.ts","../src/lib/WorkerMessageSender.ts","../src/lib/runner/ExtensionWorker.ts","../src/lib/runner/ExtensionLoader.ts","../src/lib/runner/ExtensionRunner.ts","../src/lib/Extension.ts"],"sourcesContent":["// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nlet getRandomValues;\nconst rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nconst byteToHex = [];\n\nfor (let i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).slice(1));\n}\n\nexport function unsafeStringify(arr, offset = 0) {\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  return byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]];\n}\n\nfunction stringify(arr, offset = 0) {\n  const uuid = unsafeStringify(arr, offset); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","const randomUUID = typeof crypto !== 'undefined' && crypto.randomUUID && crypto.randomUUID.bind(crypto);\nexport default {\n  randomUUID\n};","import native from './native.js';\nimport rng from './rng.js';\nimport { unsafeStringify } from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  if (native.randomUUID && !buf && !options) {\n    return native.randomUUID();\n  }\n\n  options = options || {};\n  const rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (let i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return unsafeStringify(rnds);\n}\n\nexport default v4;","import { v4 as uuid } from 'uuid';\n/**\n * Allows us to subscribe to changes to a value\n * @param initialValue - `T` Default value\n * @returns IObservable<T> Observable\n */\nexport function observe(initialValue) {\n    const storedListeners = [];\n    const observerId = uuid();\n    const setCurrentValue = (newValue) => {\n        initialValue = newValue;\n        storedListeners.forEach((listener) => listener.emit(newValue));\n    };\n    const getCurrentValue = () => initialValue;\n    /**\n     * Creates the subscription for the value\n     *\n     * @param fn Function performed when the value changes\n     */\n    const subscribe = (fn) => {\n        const newListener = { id: uuid(), emit: fn };\n        storedListeners.push(newListener);\n        return {\n            observerId,\n            id: newListener.id,\n            unsubscribe: () => {\n                const indexToRemove = storedListeners.findIndex(listener => listener.id === newListener.id);\n                if (indexToRemove < 0)\n                    return;\n                storedListeners.splice(indexToRemove, 1);\n            }\n        };\n    };\n    return {\n        subscribe,\n        id: observerId,\n        get value() {\n            return getCurrentValue();\n        },\n        set value(value) {\n            setCurrentValue(value);\n        }\n    };\n}\n//# sourceMappingURL=Observe.js.map","\r\nexport class WorkerMessageReceiver {\r\n  public onMessage: ((event: MessageEvent) => void) | null = null;\r\n\r\n\r\n  constructor(private _target: Window | Worker) {\r\n    this._target.addEventListener('error', this._onErrorEvent.bind(this));\r\n    this._target.addEventListener('message', this._onMessageEvent.bind(this));\r\n    this._target.addEventListener('messageerror', this._onErrorMessageEvent.bind(this));\r\n  }\r\n\r\n\r\n  private _respond(messageId: string) {\r\n    this._target.postMessage({ messageId, type: 'response' });\r\n  }\r\n\r\n  private _onMessageEvent(event: MessageEvent | Event) {\r\n    if (!(event instanceof MessageEvent)) return;\r\n    if (event.data.type !== 'request') return;\r\n\r\n    this.onMessage?.(event.data.payload);\r\n    this._respond(event.data.messageId);\r\n  }\r\n\r\n  private _onErrorEvent(event: MessageEvent | Event) {\r\n    if (!(event instanceof MessageEvent)) return;\r\n\r\n    console.log(event);\r\n  }\r\n\r\n  private _onErrorMessageEvent(event: MessageEvent | Event) {\r\n    if (!(event instanceof MessageEvent)) return;\r\n\r\n    console.log(event);\r\n  }\r\n}\r\n\r\n\r\n","import { IMessage } from './IMessage';\r\n\r\n\r\nexport class WorkerMessageSender {\r\n  private _messageQueue: Record<string, (() => void)> = {};\r\n\r\n\r\n  constructor(private _target: Window | Worker) {\r\n    this._target.addEventListener('message', this._onMessageEvent.bind(this));\r\n  }\r\n\r\n\r\n  public async send<T>(message: IMessage<T>) {\r\n    return new Promise((resolve, reject) => {\r\n      const newMessageId = crypto.randomUUID();\r\n\r\n      this._messageQueue[newMessageId] = () => {\r\n        delete this._messageQueue[newMessageId];\r\n        resolve('complete');\r\n      };\r\n\r\n      this._target.postMessage({\r\n        type: 'request',\r\n        payload: message,\r\n        messageId: newMessageId,\r\n      });\r\n\r\n\r\n      setTimeout(() => {\r\n        delete this._messageQueue[newMessageId];\r\n        reject('Time out');\r\n      }, 500);\r\n    });\r\n  }\r\n\r\n\r\n  private _onMessageEvent(event: MessageEvent | Event) {\r\n    if (!(event instanceof MessageEvent)) return;\r\n    if (event.data.type !== 'response') return;\r\n\r\n    this._messageQueue[event.data.messageId]?.();\r\n  }\r\n}\r\n","import { WorkerMessageReceiver } from '../WorkerMessageReceiver';\nimport { WorkerMessageSender } from '../WorkerMessageSender';\nimport { IMessage } from '../IMessage';\n\n\nexport class ExtensionWorker {\n  private _worker: Worker | null = null;\n  private _workerMessageSender: WorkerMessageSender | null = null;\n  private _workerMessageReceiver: WorkerMessageReceiver | null = null;\n\n\n  private _ready = false;\n  public get ready() { return this._ready; }\n\n  private _hasError = false;\n  public get hasError() { return this._hasError; }\n\n  private _hasInitialized = false;\n  public get hasInitialized() { return this._hasInitialized; }\n\n\n  constructor(\n    url: string,\n    onReceive: (_message: IMessage) => void,\n  ) {\n    const workerUrl = URL.createObjectURL(\n      new Blob(\n        [`import(\"${url}\").then(m => new m.default(self))`],\n        { type: \"text/javascript\" }\n      )\n    );\n\n    this._worker = new Worker(workerUrl, { type: 'module' });\n    setTimeout(() => URL.revokeObjectURL(workerUrl), 0);\n\n    this._workerMessageSender = new WorkerMessageSender(this._worker);\n    this._workerMessageReceiver = new WorkerMessageReceiver(this._worker);\n\n    this._workerMessageReceiver.onMessage = message => this._onReceive(message, onReceive);\n  }\n\n\n  public async activate() {\n    await this._workerMessageSender?.send({ type: 'activate' })\n      .then(() => {\n        this._hasInitialized = true;\n      })\n      .catch(() => {\n        this._hasError = true;\n        console.warn('Failed to activate a extension');\n      });\n  }\n\n  public async deactivate() {\n    await this._workerMessageSender?.send({ type: 'deactivate' })\n      .then(() => {\n        this._worker?.terminate();\n\n        this._worker = null;\n        this._hasInitialized = false;\n        this._workerMessageSender = null;\n      })\n      .catch(() => console.warn('Failed to deactivate a extension'));\n  }\n\n  public async send<T>(message: IMessage<T>) {\n    return await this._workerMessageSender?.send(message);\n  }\n\n\n  private _onReceive(message: IMessage, onReceive: (_message: IMessage) => void,) {\n    switch (message.type) {\n      case 'ready':\n        this._ready = true;\n        onReceive(message);\n        this.activate();\n        break;\n\n      default:\n        onReceive(message);\n        break;\n    }\n  }\n}\n","import { IManifest } from './IManifest';\n\n\nexport class ExtensionLoader {\n  private _urlRoot: URL;\n  private _cancelSignal: AbortController;\n\n  public extensionPackageUrl: string;\n\n  public name: string | null = null;\n  public version: string | null = null;\n  public description: string | null = null;\n  public extensionCodeUrl: string | null = null;\n  public extensionManifestUrl: string | null = null;\n\n\n  constructor(extension: string) {\n    if (URL.canParse(extension)) {\n      if (extension.endsWith('package.json')) {\n        this._urlRoot = new URL(extension.replace('package.json', ''));\n      } else {\n        this._urlRoot = new URL(extension);\n      }\n    } else {\n      try {\n        this._urlRoot = new URL(`https://cdn.jsdelivr.net/npm/${extension}/`);\n      } catch (error) {\n        console.log(error);\n        throw new Error('Error when try to parse the extension URL');\n      }\n    }\n\n    this._cancelSignal = new AbortController();\n\n    this.extensionPackageUrl = this._urlRoot.href.concat('package.json');\n    fetch(this.extensionPackageUrl, { signal: this._cancelSignal.signal })\n      .then(res => res.json())\n      .then(data => {\n        this.name = data.name;\n        this.version = data.version;\n        this.description = data.description;\n        this.extensionCodeUrl = new URL(data.module, this._urlRoot.href).toString();\n        this.extensionManifestUrl = new URL(data.manifest, this._urlRoot.href).toString();\n\n        this.onPackageLoaded(data);\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  }\n\n  public onExtensionLoaded(_packageData: Record<string, any>, _manifest: IManifest) { }\n\n\n  public cancelLoad() {\n    this._cancelSignal.abort('Request canceled by the user');\n  }\n\n\n  private onPackageLoaded(packageData: any) {\n    if (!this.extensionManifestUrl) throw new Error('Manifest URL not found')\n    if (!this.extensionCodeUrl) throw new Error('Code URL not found')\n\n    fetch(this.extensionManifestUrl)\n      .then(res => res.json())\n      .then((manifestData) => {\n        this.onExtensionLoaded(packageData, manifestData);\n      });\n  }\n}\n","import { IObservable } from 'react-observing/dist/interfaces/IObservable';\r\nimport { observe } from 'react-observing/dist/core/Observe';\r\n\r\nimport { TFileToDownload } from './IFileToDownload';\r\nimport { ExtensionWorker } from './ExtensionWorker';\r\nimport { ExtensionLoader } from './ExtensionLoader';\r\nimport { IExporter } from '../IExporter';\r\nimport { IMessage } from '../IMessage';\r\n\r\n\r\nexport class ExtensionRunner {\r\n  public static debug = false;\r\n  private _debug(key: string, ...rest: any[]) {\r\n    if (!ExtensionRunner.debug) return;\r\n    console.log(key, ...rest);\r\n  }\r\n\r\n  private _extensionId: string;\r\n  private _extensionLoader: ExtensionLoader;\r\n  private _extensionWorker: ExtensionWorker | null = null;\r\n\r\n  public loading = observe(false);\r\n\r\n  public url: IObservable<string | null> = observe(null);\r\n  public name: IObservable<string | null> = observe(null);\r\n  public version: IObservable<string | null> = observe(null);\r\n  public packageName: IObservable<string | null> = observe(null);\r\n  public description: IObservable<string | null> = observe(null);\r\n  public exporters: IObservable<IExporter[]> = observe([]);\r\n\r\n\r\n  constructor(url: string);\r\n  constructor(packageName: string);\r\n  constructor(extensionPackageOrUrl: string) {\r\n    this._debug('start - extensionPackageOrUrl', extensionPackageOrUrl);\r\n\r\n    this.loading.value = true;\r\n    this._extensionId = crypto.randomUUID();\r\n    this._extensionLoader = new ExtensionLoader(extensionPackageOrUrl);\r\n\r\n    this._extensionLoader.onExtensionLoaded = (_packageData, _manifestData) => {\r\n      this._debug('extension - loaded', _packageData, _manifestData);\r\n\r\n      this.name.value = _manifestData.name;\r\n      this.description.value = _manifestData.description;\r\n      this.packageName.value = _manifestData.packageName;\r\n      this.version.value = this._extensionLoader.version;\r\n      this.url.value = this._extensionLoader.extensionPackageUrl;\r\n\r\n      this.exporters.value = _manifestData.exporters.map(exporterData => ({\r\n        label: exporterData.label,\r\n        description: exporterData.description,\r\n        key: `${this._extensionId}::${exporterData.key}`,\r\n        action: async (data: { project: Object }) => {\r\n          this._debug('exporter - data,exporter', data, exporterData);\r\n          await this._extensionWorker?.send({ payload: data, type: `exporters:${exporterData.key}` })\r\n        },\r\n      }));\r\n\r\n      this._extensionWorker = new ExtensionWorker(this._extensionLoader.extensionCodeUrl || '', this._onReceive.bind(this));\r\n\r\n      this.loading.value = false;\r\n    }\r\n  }\r\n\r\n\r\n  public async deactivate() {\r\n    this._extensionLoader.cancelLoad();\r\n    await this._extensionWorker?.deactivate();\r\n    ExtensionRunner.removeExporters(this.exporters.value.map(exporter => exporter.key));\r\n  }\r\n\r\n\r\n  private _onReceive(message: IMessage) {\r\n    switch (message.type) {\r\n      case 'feedback':\r\n        this._handleFeedback(message.payload);\r\n        break;\r\n      case 'download:file':\r\n        this._handleDownloadFile(message.payload);\r\n      case 'download:files':\r\n        this._handleDownloadFile(message.payload);\r\n        break;\r\n      case 'ready':\r\n        ExtensionRunner.addExporters(this.exporters.value);\r\n        break;\r\n\r\n      default: break;\r\n    }\r\n  }\r\n\r\n  private _handleDownloadFile(payload: { downloadName: string; files: TFileToDownload[]; }) {\r\n    if (!payload) return;\r\n\r\n    ExtensionRunner.downloadFiles(payload.downloadName, payload.files);\r\n  }\r\n\r\n  private _handleFeedback(payload: { message: string; type: 'warning' | 'success' | 'error' | 'info'; }) {\r\n    if (!payload) return;\r\n\r\n    ExtensionRunner.feedback(payload.message, payload.type);\r\n  }\r\n\r\n\r\n  public static addExporters(_exporters: IExporter[]) {\r\n    throw new Error(\"Download file method not implemented yet\");\r\n  }\r\n\r\n  public static removeExporters(_keys: string[]) {\r\n    throw new Error(\"Download file method not implemented yet\");\r\n  }\r\n\r\n  public static downloadFile(_fileName: string, _fileType: string, _fileContent: string) {\r\n    throw new Error(\"Download file method not implemented yet\");\r\n  }\r\n\r\n  public static downloadFiles(_downloadName: string, _files: TFileToDownload[]) {\r\n    throw new Error(\"Download files method not implemented yet\");\r\n  }\r\n\r\n  public static feedback(_message: string, _type: 'warning' | 'success' | 'error' | 'info') {\r\n    throw new Error(\"Feedback method not implemented yet\");\r\n  }\r\n}\r\n","import { WorkerMessageReceiver } from './WorkerMessageReceiver';\r\nimport { WorkerMessageSender } from './WorkerMessageSender';\r\nimport { TFileToDownload } from './runner/IFileToDownload';\r\nimport { IMessage } from './IMessage';\r\n\r\n\r\n\r\nexport abstract class Extension {\r\n  private _commands: Record<string, ((data: any) => void)> = {};\r\n\r\n  private _workerReceiver: WorkerMessageReceiver;\r\n  private _workerSender: WorkerMessageSender;\r\n\r\n\r\n  constructor(_target: Window | Worker) {\r\n    this._workerReceiver = new WorkerMessageReceiver(_target);\r\n    this._workerSender = new WorkerMessageSender(_target);\r\n\r\n    this._commands['activate'] = this.activate.bind(this);\r\n    this._commands['deactivate'] = this.deactivate.bind(this);\r\n\r\n    this._workerReceiver.onMessage = this._onEvent.bind(this);\r\n\r\n    this._handleReady();\r\n  }\r\n\r\n\r\n  /**\r\n   * First function call when extension starts.\r\n   */\r\n  public abstract activate(): void;\r\n  /**\r\n   * Last function call when extension ends.\r\n   */\r\n  public abstract deactivate(): void;\r\n\r\n\r\n  /**\r\n   * All available commands to do in the platform\r\n   */\r\n  public readonly commands = {\r\n    /**\r\n     * Allow you to add a project exporter in the platform. You can develop a code export.\r\n     * \r\n     * @param key Key of the exporter previous added\r\n     * @param action Function to be executed when the event was called\r\n     */\r\n    addExporter: async (key: string, action: ((data: any) => void)) => {\r\n      const commandKey = `${key}`;\r\n      this._commands[`exporters:${commandKey}`] = action.bind(this);\r\n    },\r\n    /**\r\n     * Used to remove the project exporter\r\n     * \r\n     * @param key Key of the exporter previous added\r\n     */\r\n    removeExporter: async (key: string) => {\r\n      const commandKey = `${key}`;\r\n      delete this._commands[`exporters:${commandKey}`];\r\n    },\r\n    /**\r\n     * Allow you to download some content in a file\r\n     * \r\n     * @param fileName Name of the generated file\r\n     * @param fileType extension of the file\r\n     * @param fileContent file content in string\r\n     */\r\n    downloadFile: async (fileName: string, fileType: string, fileContent: string) => {\r\n      await this._workerSender.send({\r\n        type: 'download:file',\r\n        payload: { fileName, fileType, fileContent },\r\n      });\r\n    },\r\n    /**\r\n     * Allow you to download a lot of files and folders as zip\r\n     * \r\n     * @param downloadName Name of the download as zip\r\n     * @param files List of files or folders to download\r\n     */\r\n    downloadFiles: async (downloadName: string, files: TFileToDownload) => {\r\n      await this._workerSender.send({\r\n        type: 'download:files',\r\n        payload: { downloadName, files },\r\n      });\r\n    },\r\n    /**\r\n     * Allow to show some feedback to the platform user\r\n     * \r\n     * @param message Message of the feedback\r\n     * @param type type of the feedback\r\n     */\r\n    feedback: async (message: string, type: 'warning' | 'success' | 'error' | 'info') => {\r\n      await this._workerSender.send({\r\n        type: 'feedback',\r\n        payload: { message, type },\r\n      });\r\n    },\r\n  } as const;\r\n\r\n\r\n  private _onEvent(message: IMessage) {\r\n    this._commands[message.type]?.(message.payload);\r\n  }\r\n\r\n  private async _handleReady() {\r\n    await this._workerSender.send({ type: 'ready' });\r\n  }\r\n}\r\n"],"names":["getRandomValues","rnds8","rng","byteToHex","i","unsafeStringify","arr","offset","randomUUID","native","v4","options","buf","rnds","observe","initialValue","storedListeners","observerId","uuid","setCurrentValue","newValue","listener","getCurrentValue","fn","newListener","indexToRemove","value","WorkerMessageReceiver","_target","messageId","event","_a","WorkerMessageSender","message","resolve","reject","newMessageId","_b","ExtensionWorker","url","onReceive","workerUrl","ExtensionLoader","extension","error","res","data","_packageData","_manifest","packageData","manifestData","_ExtensionRunner","extensionPackageOrUrl","_manifestData","exporterData","key","rest","exporter","payload","_exporters","_keys","_fileName","_fileType","_fileContent","_downloadName","_files","_message","_type","ExtensionRunner","Extension","action","commandKey","fileName","fileType","fileContent","downloadName","files","type"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4]}