{"version":3,"file":"index.cjs.js","sources":["../src/lib/WorkerMessageReceiver.ts","../src/lib/WorkerMessageSender.ts","../src/lib/ExtensionRunner.ts","../src/lib/Extension.ts"],"sourcesContent":["\r\nexport class WorkerMessageReceiver {\r\n  public onMessage: ((event: MessageEvent) => void) | null = null;\r\n\r\n\r\n  constructor(private _target: Window | Worker) {\r\n    this._target.addEventListener('message', this._onMessageEvent.bind(this));\r\n  }\r\n\r\n\r\n  private _respond(messageId: string) {\r\n    this._target.postMessage({ messageId, type: 'response' });\r\n  }\r\n\r\n  private _onMessageEvent(event: MessageEvent | Event) {\r\n    if (!(event instanceof MessageEvent)) return;\r\n    if (event.data.type !== 'request') return;\r\n\r\n    this.onMessage?.(event.data.payload);\r\n    this._respond(event.data.messageId);\r\n  }\r\n}\r\n","import { IMessage } from './IMessage';\r\n\r\n\r\nexport class WorkerMessageSender {\r\n  private _messageQueue: Record<string, (() => void)> = {};\r\n\r\n\r\n  constructor(private _target: Window | Worker) {\r\n    this._target.onerror = this._onErrorEvent.bind(this);\r\n    this._target.onmessageerror = this._onErrorMessageEvent.bind(this);\r\n\r\n    this._target.addEventListener('error', this._onErrorEvent.bind(this));\r\n    this._target.addEventListener('message', this._onMessageEvent.bind(this));\r\n    this._target.addEventListener('messageerror', this._onErrorMessageEvent.bind(this));\r\n  }\r\n\r\n\r\n  public async send<T>(message: IMessage<T>) {\r\n    return new Promise((resolve, reject) => {\r\n      const newMessageId = crypto.randomUUID();\r\n\r\n      this._messageQueue[newMessageId] = () => {\r\n        delete this._messageQueue[newMessageId];\r\n        resolve('complete');\r\n      };\r\n\r\n      this._target.postMessage({\r\n        type: 'request',\r\n        payload: message,\r\n        messageId: newMessageId,\r\n      });\r\n\r\n\r\n      setTimeout(() => {\r\n        delete this._messageQueue[newMessageId];\r\n        reject('Time out');\r\n      }, 500);\r\n    });\r\n  }\r\n\r\n\r\n  private _onErrorEvent(event: MessageEvent | Event) {\r\n    if (!(event instanceof MessageEvent)) return;\r\n\r\n    console.log(event);\r\n  }\r\n\r\n  private _onErrorMessageEvent(event: MessageEvent | Event) {\r\n    if (!(event instanceof MessageEvent)) return;\r\n\r\n    console.log(event);\r\n  }\r\n\r\n  private _onMessageEvent(event: MessageEvent | Event) {\r\n    if (!(event instanceof MessageEvent)) return;\r\n    if (event.data.type !== 'response') return;\r\n\r\n    this._messageQueue[event.data.messageId]?.();\r\n  }\r\n}\r\n","import { WorkerMessageReceiver } from './WorkerMessageReceiver';\r\nimport { WorkerMessageSender } from './WorkerMessageSender';\r\nimport { IExporter } from './IExporter';\r\nimport { IMessage } from './IMessage';\r\n\r\n\r\nexport class ExtensionRunner {\r\n  private _worker: Worker | null = null;\r\n  private _workerMessageSender: WorkerMessageSender | null = null;\r\n  private _workerMessageReceiver: WorkerMessageReceiver | null = null;\r\n\r\n  public hasError = false;\r\n  public hasInitialized = false;\r\n\r\n\r\n  constructor(private _url: string) { }\r\n\r\n\r\n  public activate() {\r\n    const workerUrl = URL.createObjectURL(\r\n      new Blob(\r\n        [`import(\"${this._url}\").then(m => new m.default(self))`],\r\n        { type: \"text/javascript\" }\r\n      )\r\n    );\r\n\r\n    setTimeout(() => URL.revokeObjectURL(workerUrl), 0);\r\n\r\n    this._worker = new Worker(workerUrl, { type: 'module' });\r\n    this._workerMessageSender = new WorkerMessageSender(this._worker);\r\n    this._workerMessageReceiver = new WorkerMessageReceiver(this._worker);\r\n\r\n    this._workerMessageReceiver.onMessage = this._onEvent.bind(this);\r\n\r\n    this._workerMessageSender.send({ type: 'activate' })\r\n      .then(() => this.hasInitialized = true)\r\n      .catch(() => console.warn('Failed to activate a extension'))\r\n  }\r\n\r\n  public deactivate() {\r\n    this._workerMessageSender?.send({ type: 'deactivate' })\r\n      .then(() => {\r\n        this._worker?.terminate();\r\n\r\n        this._worker = null;\r\n        this.hasInitialized = false;\r\n        this._workerMessageSender = null;\r\n      })\r\n      .catch(() => console.warn('Failed to deactivate a extension'));\r\n  }\r\n\r\n\r\n  private _onEvent(message: IMessage) {\r\n    switch (message.type) {\r\n      case 'add:exporter':\r\n        this._handleAddExporter(message.payload);\r\n        break;\r\n      case 'remove:exporter':\r\n        this._handleRemoveExporter(message.payload);\r\n        break;\r\n      case 'download:file':\r\n        this._handleDownloadFile(message.payload);\r\n        break;\r\n\r\n      default: break;\r\n    }\r\n  }\r\n\r\n\r\n  private _handleAddExporter(payload: Pick<IExporter, 'key' | 'label'>) {\r\n    if (!payload) return;\r\n\r\n    ExtensionRunner.addExporter({\r\n      key: payload.key,\r\n      label: payload.label,\r\n      action: async (data: { project: Object }) => {\r\n        await this._workerMessageSender?.send({ payload: data, type: `exporters:${payload.key}` })\r\n      },\r\n    });\r\n  }\r\n\r\n  private _handleRemoveExporter(payload: string) {\r\n    if (!payload) return;\r\n\r\n    ExtensionRunner.removeExporter(payload);\r\n  }\r\n\r\n  private _handleDownloadFile(payload: { fileName: string; fileType: string; fileContent: string; }) {\r\n    if (!payload) return;\r\n\r\n    ExtensionRunner.downloadFile(payload.fileName, payload.fileType, payload.fileContent);\r\n  }\r\n\r\n\r\n  public static addExporter(exporter: IExporter) {\r\n    throw new Error(\"Add exporter method not implemented yet\");\r\n  }\r\n\r\n  public static removeExporter(key: string) {\r\n    throw new Error(\"Remove exporter method not implemented yet\");\r\n  }\r\n\r\n  public static downloadFile(fileName: string, fileType: string, fileContent: string) {\r\n    throw new Error(\"Download file method not implemented yet\");\r\n  }\r\n}\r\n","import { WorkerMessageReceiver } from './WorkerMessageReceiver';\r\nimport { WorkerMessageSender } from './WorkerMessageSender';\r\nimport { IExporter } from './IExporter';\r\nimport { IMessage } from './IMessage';\r\n\r\n\r\nexport class Extension {\r\n  private _extensionId = crypto.randomUUID();\r\n  private _commands: Record<string, ((data: any) => void)> = {};\r\n\r\n  private _workerReceiver: WorkerMessageReceiver;\r\n  private _workerSender: WorkerMessageSender;\r\n\r\n\r\n  constructor(_target: Window | Worker) {\r\n    this._workerReceiver = new WorkerMessageReceiver(_target);\r\n    this._workerSender = new WorkerMessageSender(_target);\r\n\r\n    this._commands['activate'] = this.activate.bind(this);\r\n    this._commands['deactivate'] = this.deactivate.bind(this);\r\n\r\n    this._workerReceiver.onMessage = this._onEvent.bind(this);\r\n  }\r\n\r\n\r\n  public activate() { }\r\n  public deactivate() { }\r\n\r\n\r\n  public async addExporter(exporter: Pick<IExporter, 'key' | 'label'> & { action: ((data: any) => void) }) {\r\n    const commandKey = `${this._extensionId}:${exporter.key}`;\r\n\r\n    this._commands[`exporters:${commandKey}`] = exporter.action.bind(this);\r\n\r\n    await this._workerSender.send({\r\n      type: 'add:exporter',\r\n      payload: {\r\n        key: commandKey,\r\n        label: exporter.label,\r\n      },\r\n    });\r\n  }\r\n\r\n  public async removeExporter(key: string) {\r\n    const commandKey = `${this._extensionId}:${key}`;\r\n\r\n    delete this._commands[`exporters:${commandKey}`];\r\n\r\n    await this._workerSender.send({\r\n      type: 'remove:exporter',\r\n      payload: commandKey,\r\n    });\r\n  }\r\n\r\n  public async downloadFile(fileName: string, fileType: string, fileContent: string) {\r\n    await this._workerSender.send({\r\n      type: 'download:file',\r\n      payload: { fileName, fileType, fileContent },\r\n    });\r\n  }\r\n\r\n\r\n  private _onEvent(message: IMessage) {\r\n    this._commands[message.type]?.(message.payload);\r\n  }\r\n}\r\n"],"names":["WorkerMessageReceiver","_target","messageId","event","_a","WorkerMessageSender","message","resolve","reject","newMessageId","_b","ExtensionRunner","_url","workerUrl","payload","data","exporter","key","fileName","fileType","fileContent","Extension","commandKey"],"mappings":"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"}